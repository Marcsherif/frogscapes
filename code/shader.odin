package game
import sg "../ext/sokol/gfx"
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc -i shaders\shader.glsl -o code\shader.odin -l glsl430:hlsl5 -f sokol_odin

    Overview:
    =========
    Shader program: 'triangle':
        Get shader desc: triangle_shader_desc(sg.query_backend())
        Vertex Shader: vs
        Fragment Shader: fs
        Attributes:
            ATTR_triangle_position => 0
            ATTR_triangle_color0 => 1
    Bindings:
        Uniform block 'fs_params':
            Odin struct: Fs_Params
            Bind slot: UB_fs_params => 0
*/
ATTR_triangle_position :: 0
ATTR_triangle_color0 :: 1
UB_fs_params :: 0
Fs_Params :: struct #align(16) {
    using _: struct #packed {
        iResolution: [2]f32,
        iTime: f32,
        _: [4]u8,
    },
}
/*
    #version 430

    layout(location = 0) in vec4 position;
    layout(location = 0) out vec4 color;
    layout(location = 1) in vec4 color0;

    void main()
    {
        gl_Position = position;
        color = color0;
    }

*/
@(private="file")
vs_source_glsl430 := [194]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,
    0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x3b,0x0a,0x0a,
    0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x00,
}
/*
    #version 430

    uniform vec4 fs_params[1];
    layout(location = 0) out vec4 frag_color;
    layout(location = 0) in vec4 color;

    vec3 palette(float t)
    {
        return fma(vec3(0.5), cos(((vec3(1.0) * t) + vec3(0.263000011444091796875, 0.41600000858306884765625, 0.556999981403350830078125)) * 6.28318023681640625), vec3(0.5));
    }

    void main()
    {
        vec2 _65 = ((gl_FragCoord.xy * 2.0) - fs_params[0].xy) / vec2(fs_params[0].y);
        vec2 uv = _65;
        vec3 finalColor = vec3(0.0);
        for (float i = 0.0; i < 4.0; i += 1.0)
        {
            vec2 _81 = uv;
            vec2 _86 = fract(_81 * 1.5) - vec2(0.5);
            uv = _86;
            float _91 = length(_65);
            float d = length(_86) * exp(-_91);
            float param = fma(fs_params[0].z, 0.4000000059604644775390625, fma(i, 0.4000000059604644775390625, _91));
            float _109 = d;
            float _123 = pow(0.00999999977648258209228515625 / abs(sin(fma(_109, 8.0, fs_params[0].z)) * 0.125), 1.2000000476837158203125);
            d = _123;
            finalColor += (palette(param) * _123);
        }
        frag_color = vec4(color.xyz * finalColor, 1.0);
    }

*/
@(private="file")
fs_source_glsl430 := [1083]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,
    0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x6c,
    0x65,0x74,0x74,0x65,0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,0x74,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x6d,0x61,0x28,0x76,
    0x65,0x63,0x33,0x28,0x30,0x2e,0x35,0x29,0x2c,0x20,0x63,0x6f,0x73,0x28,0x28,0x28,
    0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x29,0x20,0x2a,0x20,0x74,0x29,0x20,0x2b,
    0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x32,0x36,0x33,0x30,0x30,0x30,0x30,0x31,
    0x31,0x34,0x34,0x34,0x30,0x39,0x31,0x37,0x39,0x36,0x38,0x37,0x35,0x2c,0x20,0x30,
    0x2e,0x34,0x31,0x36,0x30,0x30,0x30,0x30,0x30,0x38,0x35,0x38,0x33,0x30,0x36,0x38,
    0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x2c,0x20,0x30,0x2e,0x35,0x35,0x36,0x39,
    0x39,0x39,0x39,0x38,0x31,0x34,0x30,0x33,0x33,0x35,0x30,0x38,0x33,0x30,0x30,0x37,
    0x38,0x31,0x32,0x35,0x29,0x29,0x20,0x2a,0x20,0x36,0x2e,0x32,0x38,0x33,0x31,0x38,
    0x30,0x32,0x33,0x36,0x38,0x31,0x36,0x34,0x30,0x36,0x32,0x35,0x29,0x2c,0x20,0x76,
    0x65,0x63,0x33,0x28,0x30,0x2e,0x35,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x32,0x20,0x5f,0x36,0x35,0x20,0x3d,0x20,0x28,0x28,0x67,0x6c,0x5f,
    0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x79,0x20,0x2a,0x20,0x32,
    0x2e,0x30,0x29,0x20,0x2d,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x30,0x5d,0x2e,0x78,0x79,0x29,0x20,0x2f,0x20,0x76,0x65,0x63,0x32,0x28,0x66,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x79,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x20,0x3d,0x20,0x5f,0x36,0x35,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x66,0x69,0x6e,0x61,0x6c,
    0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x69,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,0x34,
    0x2e,0x30,0x3b,0x20,0x69,0x20,0x2b,0x3d,0x20,0x31,0x2e,0x30,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,
    0x20,0x5f,0x38,0x31,0x20,0x3d,0x20,0x75,0x76,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x38,0x36,0x20,0x3d,0x20,0x66,0x72,
    0x61,0x63,0x74,0x28,0x5f,0x38,0x31,0x20,0x2a,0x20,0x31,0x2e,0x35,0x29,0x20,0x2d,
    0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x75,0x76,0x20,0x3d,0x20,0x5f,0x38,0x36,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x39,0x31,0x20,
    0x3d,0x20,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x5f,0x36,0x35,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x20,0x3d,
    0x20,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x5f,0x38,0x36,0x29,0x20,0x2a,0x20,0x65,
    0x78,0x70,0x28,0x2d,0x5f,0x39,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,
    0x66,0x6d,0x61,0x28,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,
    0x2e,0x7a,0x2c,0x20,0x30,0x2e,0x34,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x39,
    0x36,0x30,0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x2c,
    0x20,0x66,0x6d,0x61,0x28,0x69,0x2c,0x20,0x30,0x2e,0x34,0x30,0x30,0x30,0x30,0x30,
    0x30,0x30,0x35,0x39,0x36,0x30,0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x33,0x39,0x30,
    0x36,0x32,0x35,0x2c,0x20,0x5f,0x39,0x31,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x30,0x39,0x20,0x3d,
    0x20,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x31,0x32,0x33,0x20,0x3d,0x20,0x70,0x6f,0x77,0x28,0x30,0x2e,0x30,
    0x30,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x37,0x36,0x34,0x38,0x32,0x35,0x38,
    0x32,0x30,0x39,0x32,0x32,0x38,0x35,0x31,0x35,0x36,0x32,0x35,0x20,0x2f,0x20,0x61,
    0x62,0x73,0x28,0x73,0x69,0x6e,0x28,0x66,0x6d,0x61,0x28,0x5f,0x31,0x30,0x39,0x2c,
    0x20,0x38,0x2e,0x30,0x2c,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x30,0x5d,0x2e,0x7a,0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x31,0x32,0x35,0x29,0x2c,
    0x20,0x31,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x34,0x37,0x36,0x38,0x33,0x37,
    0x31,0x35,0x38,0x32,0x30,0x33,0x31,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x64,0x20,0x3d,0x20,0x5f,0x31,0x32,0x33,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x69,0x6e,0x61,0x6c,0x43,0x6f,0x6c,0x6f,0x72,
    0x20,0x2b,0x3d,0x20,0x28,0x70,0x61,0x6c,0x65,0x74,0x74,0x65,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x29,0x20,0x2a,0x20,0x5f,0x31,0x32,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,
    0x79,0x7a,0x20,0x2a,0x20,0x66,0x69,0x6e,0x61,0x6c,0x43,0x6f,0x6c,0x6f,0x72,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
}
/*
    static float4 gl_Position;
    static float4 position;
    static float4 color;
    static float4 color0;

    struct SPIRV_Cross_Input
    {
        float4 position : TEXCOORD0;
        float4 color0 : TEXCOORD1;
    };

    struct SPIRV_Cross_Output
    {
        float4 color : TEXCOORD0;
        float4 gl_Position : SV_Position;
    };

    void vert_main()
    {
        gl_Position = position;
        color = color0;
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        position = stage_input.position;
        color0 = stage_input.color0;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.color = color;
        return stage_output;
    }
*/
@(private="file")
vs_source_hlsl5 := [645]u8 {
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,
    0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x3b,0x0a,0x0a,0x73,
    0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,
    0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,
    0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x20,0x3a,0x20,0x54,
    0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,
    0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x54,0x45,0x58,
    0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,
    0x20,0x53,0x56,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,
    0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,
    0x6f,0x72,0x30,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,
    0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,
    0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,
    0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,
    0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x63,
    0x6f,0x6c,0x6f,0x72,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x5f,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,0x52,
    0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x73,
    0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x50,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,
    0x3b,0x0a,0x7d,0x0a,0x00,
}
/*
    cbuffer fs_params : register(b0)
    {
        float2 _52_iResolution : packoffset(c0);
        float _52_iTime : packoffset(c0.z);
    };


    static float4 gl_FragCoord;
    static float4 frag_color;
    static float4 color;

    struct SPIRV_Cross_Input
    {
        float4 color : TEXCOORD0;
        float4 gl_FragCoord : SV_Position;
    };

    struct SPIRV_Cross_Output
    {
        float4 frag_color : SV_Target0;
    };

    float3 palette(float t)
    {
        return mad(0.5f.xxx, cos(((1.0f.xxx * t) + float3(0.263000011444091796875f, 0.41600000858306884765625f, 0.556999981403350830078125f)) * 6.28318023681640625f), 0.5f.xxx);
    }

    void frag_main()
    {
        float2 _65 = ((gl_FragCoord.xy * 2.0f) - _52_iResolution) / _52_iResolution.y.xx;
        float2 uv = _65;
        float3 finalColor = 0.0f.xxx;
        for (float i = 0.0f; i < 4.0f; i += 1.0f)
        {
            float2 _81 = uv;
            float2 _86 = frac(_81 * 1.5f) - 0.5f.xx;
            uv = _86;
            float _91 = length(_65);
            float d = length(_86) * exp(-_91);
            float param = mad(_52_iTime, 0.4000000059604644775390625f, mad(i, 0.4000000059604644775390625f, _91));
            float _109 = d;
            float _123 = pow(0.00999999977648258209228515625f / abs(sin(mad(_109, 8.0f, _52_iTime)) * 0.125f), 1.2000000476837158203125f);
            d = _123;
            finalColor += (palette(param) * _123);
        }
        frag_color = float4(color.xyz * finalColor, 1.0f);
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        gl_FragCoord = stage_input.gl_FragCoord;
        gl_FragCoord.w = 1.0 / gl_FragCoord.w;
        color = stage_input.color;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.frag_color = frag_color;
        return stage_output;
    }
*/
@(private="file")
fs_source_hlsl5 := [1651]u8 {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x35,
    0x32,0x5f,0x69,0x52,0x65,0x73,0x6f,0x6c,0x75,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,
    0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x32,0x5f,0x69,0x54,
    0x69,0x6d,0x65,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,
    0x28,0x63,0x30,0x2e,0x7a,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x0a,0x73,0x74,0x61,
    0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x46,0x72,
    0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,
    0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,
    0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x20,0x3a,0x20,0x53,0x56,0x5f,0x50,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,
    0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,
    0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,
    0x20,0x53,0x56,0x5f,0x54,0x61,0x72,0x67,0x65,0x74,0x30,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x6c,0x65,0x74,0x74,0x65,0x28,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x61,0x64,0x28,0x30,0x2e,0x35,0x66,0x2e,0x78,
    0x78,0x78,0x2c,0x20,0x63,0x6f,0x73,0x28,0x28,0x28,0x31,0x2e,0x30,0x66,0x2e,0x78,
    0x78,0x78,0x20,0x2a,0x20,0x74,0x29,0x20,0x2b,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x28,0x30,0x2e,0x32,0x36,0x33,0x30,0x30,0x30,0x30,0x31,0x31,0x34,0x34,0x34,0x30,
    0x39,0x31,0x37,0x39,0x36,0x38,0x37,0x35,0x66,0x2c,0x20,0x30,0x2e,0x34,0x31,0x36,
    0x30,0x30,0x30,0x30,0x30,0x38,0x35,0x38,0x33,0x30,0x36,0x38,0x38,0x34,0x37,0x36,
    0x35,0x36,0x32,0x35,0x66,0x2c,0x20,0x30,0x2e,0x35,0x35,0x36,0x39,0x39,0x39,0x39,
    0x38,0x31,0x34,0x30,0x33,0x33,0x35,0x30,0x38,0x33,0x30,0x30,0x37,0x38,0x31,0x32,
    0x35,0x66,0x29,0x29,0x20,0x2a,0x20,0x36,0x2e,0x32,0x38,0x33,0x31,0x38,0x30,0x32,
    0x33,0x36,0x38,0x31,0x36,0x34,0x30,0x36,0x32,0x35,0x66,0x29,0x2c,0x20,0x30,0x2e,
    0x35,0x66,0x2e,0x78,0x78,0x78,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,
    0x20,0x66,0x72,0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x36,0x35,0x20,0x3d,0x20,
    0x28,0x28,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x78,
    0x79,0x20,0x2a,0x20,0x32,0x2e,0x30,0x66,0x29,0x20,0x2d,0x20,0x5f,0x35,0x32,0x5f,
    0x69,0x52,0x65,0x73,0x6f,0x6c,0x75,0x74,0x69,0x6f,0x6e,0x29,0x20,0x2f,0x20,0x5f,
    0x35,0x32,0x5f,0x69,0x52,0x65,0x73,0x6f,0x6c,0x75,0x74,0x69,0x6f,0x6e,0x2e,0x79,
    0x2e,0x78,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,
    0x75,0x76,0x20,0x3d,0x20,0x5f,0x36,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x66,0x69,0x6e,0x61,0x6c,0x43,0x6f,0x6c,0x6f,0x72,0x20,
    0x3d,0x20,0x30,0x2e,0x30,0x66,0x2e,0x78,0x78,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6f,0x72,0x20,0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,0x69,0x20,0x3d,0x20,0x30,
    0x2e,0x30,0x66,0x3b,0x20,0x69,0x20,0x3c,0x20,0x34,0x2e,0x30,0x66,0x3b,0x20,0x69,
    0x20,0x2b,0x3d,0x20,0x31,0x2e,0x30,0x66,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,
    0x38,0x31,0x20,0x3d,0x20,0x75,0x76,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x38,0x36,0x20,0x3d,0x20,0x66,0x72,
    0x61,0x63,0x28,0x5f,0x38,0x31,0x20,0x2a,0x20,0x31,0x2e,0x35,0x66,0x29,0x20,0x2d,
    0x20,0x30,0x2e,0x35,0x66,0x2e,0x78,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x75,0x76,0x20,0x3d,0x20,0x5f,0x38,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x39,0x31,0x20,0x3d,0x20,
    0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x5f,0x36,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x20,0x3d,0x20,0x6c,
    0x65,0x6e,0x67,0x74,0x68,0x28,0x5f,0x38,0x36,0x29,0x20,0x2a,0x20,0x65,0x78,0x70,
    0x28,0x2d,0x5f,0x39,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x6d,0x61,
    0x64,0x28,0x5f,0x35,0x32,0x5f,0x69,0x54,0x69,0x6d,0x65,0x2c,0x20,0x30,0x2e,0x34,
    0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x39,0x36,0x30,0x34,0x36,0x34,0x34,0x37,
    0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x66,0x2c,0x20,0x6d,0x61,0x64,0x28,0x69,
    0x2c,0x20,0x30,0x2e,0x34,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x39,0x36,0x30,
    0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x66,0x2c,0x20,
    0x5f,0x39,0x31,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x30,0x39,0x20,0x3d,0x20,0x64,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x32,
    0x33,0x20,0x3d,0x20,0x70,0x6f,0x77,0x28,0x30,0x2e,0x30,0x30,0x39,0x39,0x39,0x39,
    0x39,0x39,0x39,0x37,0x37,0x36,0x34,0x38,0x32,0x35,0x38,0x32,0x30,0x39,0x32,0x32,
    0x38,0x35,0x31,0x35,0x36,0x32,0x35,0x66,0x20,0x2f,0x20,0x61,0x62,0x73,0x28,0x73,
    0x69,0x6e,0x28,0x6d,0x61,0x64,0x28,0x5f,0x31,0x30,0x39,0x2c,0x20,0x38,0x2e,0x30,
    0x66,0x2c,0x20,0x5f,0x35,0x32,0x5f,0x69,0x54,0x69,0x6d,0x65,0x29,0x29,0x20,0x2a,
    0x20,0x30,0x2e,0x31,0x32,0x35,0x66,0x29,0x2c,0x20,0x31,0x2e,0x32,0x30,0x30,0x30,
    0x30,0x30,0x30,0x34,0x37,0x36,0x38,0x33,0x37,0x31,0x35,0x38,0x32,0x30,0x33,0x31,
    0x32,0x35,0x66,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x20,
    0x3d,0x20,0x5f,0x31,0x32,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x66,0x69,0x6e,0x61,0x6c,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x2b,0x3d,0x20,0x28,0x70,
    0x61,0x6c,0x65,0x74,0x74,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x20,0x2a,0x20,
    0x5f,0x31,0x32,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x20,0x2a,
    0x20,0x66,0x69,0x6e,0x61,0x6c,0x43,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x31,0x2e,0x30,
    0x66,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,
    0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,
    0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,
    0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,
    0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x67,
    0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x77,0x20,
    0x3d,0x20,0x31,0x2e,0x30,0x20,0x2f,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,
    0x6f,0x6f,0x72,0x64,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,0x52,
    0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x73,
    0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x66,0x72,
    0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,
    0x7d,0x0a,0x00,
}
triangle_shader_desc :: proc (backend: sg.Backend) -> sg.Shader_Desc {
    desc: sg.Shader_Desc
    desc.label = "triangle_shader"
    #partial switch backend {
    case .GLCORE:
        desc.vertex_func.source = transmute(cstring)&vs_source_glsl430
        desc.vertex_func.entry = "main"
        desc.fragment_func.source = transmute(cstring)&fs_source_glsl430
        desc.fragment_func.entry = "main"
        desc.attrs[0].glsl_name = "position"
        desc.attrs[1].glsl_name = "color0"
        desc.uniform_blocks[0].stage = .FRAGMENT
        desc.uniform_blocks[0].layout = .STD140
        desc.uniform_blocks[0].size = 16
        desc.uniform_blocks[0].glsl_uniforms[0].type = .FLOAT4
        desc.uniform_blocks[0].glsl_uniforms[0].array_count = 1
        desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "fs_params"
    case .D3D11:
        desc.vertex_func.source = transmute(cstring)&vs_source_hlsl5
        desc.vertex_func.d3d11_target = "vs_5_0"
        desc.vertex_func.entry = "main"
        desc.fragment_func.source = transmute(cstring)&fs_source_hlsl5
        desc.fragment_func.d3d11_target = "ps_5_0"
        desc.fragment_func.entry = "main"
        desc.attrs[0].hlsl_sem_name = "TEXCOORD"
        desc.attrs[0].hlsl_sem_index = 0
        desc.attrs[1].hlsl_sem_name = "TEXCOORD"
        desc.attrs[1].hlsl_sem_index = 1
        desc.uniform_blocks[0].stage = .FRAGMENT
        desc.uniform_blocks[0].layout = .STD140
        desc.uniform_blocks[0].size = 16
        desc.uniform_blocks[0].hlsl_register_b_n = 0
    }
    return desc
}
